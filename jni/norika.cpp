/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <string.h>
#define LOG_TAG "HelloWorld"
#include <android/log.h>
#define LOGD(...) __android_log_write(ANDROID_LOG_DEBUG, LOG_TAG, content);
#define LOGI(...) __android_log_write(ANDROID_LOG_INFO, LOG_TAG, content);
/* Header for class com_norika_android_library_base_Test */

#ifndef _Included_com_norika_android_library_base_Test
#define _Included_com_norika_android_library_base_Test
#ifdef __cplusplus
extern "C" {
#endif
#undef com_norika_android_library_base_Test_MODE_PRIVATE
#define com_norika_android_library_base_Test_MODE_PRIVATE 0L
#undef com_norika_android_library_base_Test_MODE_WORLD_READABLE
#define com_norika_android_library_base_Test_MODE_WORLD_READABLE 1L
#undef com_norika_android_library_base_Test_MODE_WORLD_WRITEABLE
#define com_norika_android_library_base_Test_MODE_WORLD_WRITEABLE 2L
#undef com_norika_android_library_base_Test_MODE_APPEND
#define com_norika_android_library_base_Test_MODE_APPEND 32768L
#undef com_norika_android_library_base_Test_MODE_MULTI_PROCESS
#define com_norika_android_library_base_Test_MODE_MULTI_PROCESS 4L
#undef com_norika_android_library_base_Test_MODE_ENABLE_WRITE_AHEAD_LOGGING
#define com_norika_android_library_base_Test_MODE_ENABLE_WRITE_AHEAD_LOGGING 8L
#undef com_norika_android_library_base_Test_BIND_AUTO_CREATE
#define com_norika_android_library_base_Test_BIND_AUTO_CREATE 1L
#undef com_norika_android_library_base_Test_BIND_DEBUG_UNBIND
#define com_norika_android_library_base_Test_BIND_DEBUG_UNBIND 2L
#undef com_norika_android_library_base_Test_BIND_NOT_FOREGROUND
#define com_norika_android_library_base_Test_BIND_NOT_FOREGROUND 4L
#undef com_norika_android_library_base_Test_BIND_ABOVE_CLIENT
#define com_norika_android_library_base_Test_BIND_ABOVE_CLIENT 8L
#undef com_norika_android_library_base_Test_BIND_ALLOW_OOM_MANAGEMENT
#define com_norika_android_library_base_Test_BIND_ALLOW_OOM_MANAGEMENT 16L
#undef com_norika_android_library_base_Test_BIND_WAIVE_PRIORITY
#define com_norika_android_library_base_Test_BIND_WAIVE_PRIORITY 32L
#undef com_norika_android_library_base_Test_BIND_IMPORTANT
#define com_norika_android_library_base_Test_BIND_IMPORTANT 64L
#undef com_norika_android_library_base_Test_BIND_ADJUST_WITH_ACTIVITY
#define com_norika_android_library_base_Test_BIND_ADJUST_WITH_ACTIVITY 128L
#undef com_norika_android_library_base_Test_CONTEXT_INCLUDE_CODE
#define com_norika_android_library_base_Test_CONTEXT_INCLUDE_CODE 1L
#undef com_norika_android_library_base_Test_CONTEXT_IGNORE_SECURITY
#define com_norika_android_library_base_Test_CONTEXT_IGNORE_SECURITY 2L
#undef com_norika_android_library_base_Test_CONTEXT_RESTRICTED
#define com_norika_android_library_base_Test_CONTEXT_RESTRICTED 4L
#undef com_norika_android_library_base_Test_RESULT_CANCELED
#define com_norika_android_library_base_Test_RESULT_CANCELED 0L
#undef com_norika_android_library_base_Test_RESULT_OK
#define com_norika_android_library_base_Test_RESULT_OK -1L
#undef com_norika_android_library_base_Test_RESULT_FIRST_USER
#define com_norika_android_library_base_Test_RESULT_FIRST_USER 1L
#undef com_norika_android_library_base_Test_DEFAULT_KEYS_DISABLE
#define com_norika_android_library_base_Test_DEFAULT_KEYS_DISABLE 0L
#undef com_norika_android_library_base_Test_DEFAULT_KEYS_DIALER
#define com_norika_android_library_base_Test_DEFAULT_KEYS_DIALER 1L
#undef com_norika_android_library_base_Test_DEFAULT_KEYS_SHORTCUT
#define com_norika_android_library_base_Test_DEFAULT_KEYS_SHORTCUT 2L
#undef com_norika_android_library_base_Test_DEFAULT_KEYS_SEARCH_LOCAL
#define com_norika_android_library_base_Test_DEFAULT_KEYS_SEARCH_LOCAL 3L
#undef com_norika_android_library_base_Test_DEFAULT_KEYS_SEARCH_GLOBAL
#define com_norika_android_library_base_Test_DEFAULT_KEYS_SEARCH_GLOBAL 4L
#undef com_norika_android_library_base_Test_HONEYCOMB
#define com_norika_android_library_base_Test_HONEYCOMB 11L
#undef com_norika_android_library_base_Test_MSG_REALLY_STOPPED
#define com_norika_android_library_base_Test_MSG_REALLY_STOPPED 1L
#undef com_norika_android_library_base_Test_MSG_RESUME_PENDING
#define com_norika_android_library_base_Test_MSG_RESUME_PENDING 2L

static char TAG[] = "norika";
void log_print(bool if_print_log, const char * content) {
	if (if_print_log)
		LOGD(content);
}

JNIEXPORT jstring JNICALL Java_com_norika_android_library_base_Test_jniFromC
  (JNIEnv* env, jobject thiz){
	//不支持中文
	log_print(true,"hello world!\n");
	return env->NewStringUTF("Hello World! Shit fuck");
}

//演示代码在：ndkpassdata项目中在C语言中没有jstring的类型（也就是Java的String类型），可以通过个函数把jstring转的成C语言中字符数组：
char* Jstring2CStr(JNIEnv* env, jstring jstr){
	char* rtn = NULL;
	jclass clsstring = env->FindClass("java/lang/String");
	jstring strencode = env->NewStringUTF("GB2312");
	jmethodID mid = env->GetMethodID( clsstring,"getBytes","(Ljava/lang/String;)[B");
	jbyteArray barr = (jbyteArray)env->CallObjectMethod(jstr,mid,strencode); //String .getByte("GB2312");
	jsize alen = env->GetArrayLength(barr);
	jbyte* ba = env->GetByteArrayElements(barr,JNI_FALSE);
	if(alen   >   0){
		rtn = (char*)malloc(alen+1); //"\0"
		memcpy(rtn,ba,alen);
		rtn[alen]=0;
	}
	env->ReleaseByteArrayElements(barr,ba,0);
	return rtn;
}

#ifdef __cplusplus
}
#endif
#endif
